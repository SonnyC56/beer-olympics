import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState, useRef, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Clock, Trophy, Target, Users, ChevronRight, Bell, Zap } from 'lucide-react';
import { cn } from '../../lib/utils';
import { useSwipeNavigation } from '../../hooks/useSwipeGesture';
import { format } from 'date-fns';
export function MobilePlayerDashboard({ playerName, teamName, teamColor = '#3b82f6', nextMatch, stats, recentMatches, notifications = 0, }) {
    const [activeTab, setActiveTab] = useState('overview');
    const containerRef = useRef(null);
    // Swipe between tabs
    useEffect(() => {
        useSwipeNavigation(containerRef, {
            onNext: () => {
                const tabs = ['overview', 'stats', 'matches'];
                const currentIndex = tabs.indexOf(activeTab);
                if (currentIndex < tabs.length - 1) {
                    setActiveTab(tabs[currentIndex + 1]);
                }
            },
            onPrevious: () => {
                const tabs = ['overview', 'stats', 'matches'];
                const currentIndex = tabs.indexOf(activeTab);
                if (currentIndex > 0) {
                    setActiveTab(tabs[currentIndex - 1]);
                }
            },
        });
    }, [activeTab, containerRef]);
    return (_jsxs("div", { ref: containerRef, className: "mobile-player-dashboard min-h-screen bg-background", children: [_jsxs("div", { className: "relative overflow-hidden bg-gradient-to-br from-primary to-primary/80 text-white p-6 pb-20", style: {
                    background: `linear-gradient(135deg, ${teamColor} 0%, ${teamColor}dd 100%)`
                }, children: [notifications > 0 && (_jsx(motion.div, { initial: { scale: 0 }, animate: { scale: 1 }, className: "absolute top-6 right-6", children: _jsxs("button", { className: "relative p-2 rounded-full bg-white/20 backdrop-blur", children: [_jsx(Bell, { size: 20 }), _jsx("span", { className: "absolute -top-1 -right-1 w-5 h-5 bg-red-500 rounded-full text-xs flex items-center justify-center", children: notifications })] }) })), _jsxs("div", { className: "relative z-10", children: [_jsx("h1", { className: "text-2xl font-bold mb-1", children: playerName }), _jsxs("p", { className: "text-white/80 flex items-center gap-2", children: [_jsx(Users, { size: 16 }), teamName] })] }), _jsx("div", { className: "absolute bottom-0 right-0 w-48 h-48 bg-white/10 rounded-full -mb-24 -mr-24" }), _jsx("div", { className: "absolute top-0 left-0 w-32 h-32 bg-white/5 rounded-full -mt-16 -ml-16" })] }), nextMatch && (_jsx(motion.div, { initial: { y: -20, opacity: 0 }, animate: { y: 0, opacity: 1 }, className: "mx-4 -mt-14 relative z-20", children: _jsxs("div", { className: "bg-card rounded-2xl shadow-lg p-4 border", children: [_jsxs("div", { className: "flex items-center justify-between mb-3", children: [_jsxs("h3", { className: "font-semibold flex items-center gap-2", children: [_jsx(Clock, { className: "text-primary", size: 18 }), "Your Next Match"] }), _jsx("span", { className: "text-xs bg-primary/10 text-primary px-2 py-1 rounded-full", children: format(nextMatch.time, 'h:mm a') })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-sm text-muted-foreground", children: "Opponent" }), _jsx("span", { className: "font-medium", children: nextMatch.opponent })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-sm text-muted-foreground", children: "Game" }), _jsx("span", { className: "font-medium", children: nextMatch.game })] }), nextMatch.location && (_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-sm text-muted-foreground", children: "Location" }), _jsx("span", { className: "font-medium", children: nextMatch.location })] }))] }), _jsxs("button", { className: "w-full mt-4 bg-primary text-primary-foreground py-3 rounded-xl font-medium flex items-center justify-center gap-2 active:scale-95 transition-transform", children: [_jsx(Target, { size: 18 }), "I'm Ready!"] })] }) })), _jsx("div", { className: "flex justify-around border-b mt-6 px-4", children: ['overview', 'stats', 'matches'].map((tab) => (_jsxs("button", { onClick: () => setActiveTab(tab), className: cn("flex-1 py-3 text-sm font-medium capitalize transition-colors relative", activeTab === tab
                        ? "text-primary"
                        : "text-muted-foreground"), children: [tab, activeTab === tab && (_jsx(motion.div, { layoutId: "activeTab", className: "absolute bottom-0 left-0 right-0 h-0.5 bg-primary" }))] }, tab))) }), _jsx(AnimatePresence, { mode: "wait", children: _jsxs(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, exit: { opacity: 0, x: -20 }, transition: { duration: 0.2 }, className: "p-4", children: [activeTab === 'overview' && (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "grid grid-cols-2 gap-3", children: [_jsx(StatCard, { icon: Trophy, label: "Win Rate", value: `${Math.round((stats.wins / stats.totalGames) * 100)}%`, color: "text-green-500" }), _jsx(StatCard, { icon: Zap, label: "Win Streak", value: stats.winStreak.toString(), color: "text-yellow-500" })] }), _jsxs("div", { className: "bg-card rounded-xl p-4 border", children: [_jsx("h3", { className: "font-semibold mb-3", children: "Recent Performance" }), _jsx("div", { className: "flex gap-1", children: recentMatches.slice(0, 10).map((match) => (_jsx("div", { className: cn("flex-1 h-12 rounded", match.result === 'win'
                                                    ? "bg-green-500/20 border-2 border-green-500"
                                                    : "bg-red-500/20 border-2 border-red-500"), title: `${match.result === 'win' ? 'Won' : 'Lost'} vs ${match.opponent}` }, match.id))) })] }), _jsxs("div", { className: "space-y-2", children: [_jsx(ActionButton, { icon: Target, label: "Submit Score", sublabel: "Record your latest match", onClick: () => { } }), _jsx(ActionButton, { icon: Trophy, label: "View Full Leaderboard", sublabel: `You're ranked #${stats.rank} of ${stats.totalPlayers}`, onClick: () => { } })] })] })), activeTab === 'stats' && (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "grid grid-cols-2 gap-3", children: [_jsxs("div", { className: "bg-card rounded-xl p-4 border", children: [_jsx("div", { className: "text-2xl font-bold text-green-500", children: stats.wins }), _jsx("div", { className: "text-sm text-muted-foreground", children: "Wins" })] }), _jsxs("div", { className: "bg-card rounded-xl p-4 border", children: [_jsx("div", { className: "text-2xl font-bold text-red-500", children: stats.losses }), _jsx("div", { className: "text-sm text-muted-foreground", children: "Losses" })] })] }), _jsxs("div", { className: "bg-card rounded-xl p-4 border", children: [_jsx("h3", { className: "font-semibold mb-3", children: "Tournament Rank" }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsxs("div", { className: "text-3xl font-bold", children: ["#", stats.rank] }), _jsxs("div", { className: "text-sm text-muted-foreground", children: ["out of ", stats.totalPlayers, " players"] })] }), _jsx(Trophy, { className: "text-yellow-500", size: 48 })] })] })] })), activeTab === 'matches' && (_jsx("div", { className: "space-y-3", children: recentMatches.map((match) => (_jsxs(motion.div, { initial: { opacity: 0, y: 10 }, animate: { opacity: 1, y: 0 }, className: cn("bg-card rounded-xl p-4 border-2", match.result === 'win'
                                    ? "border-green-500/30"
                                    : "border-red-500/30"), children: [_jsxs("div", { className: "flex items-center justify-between mb-2", children: [_jsx("span", { className: "font-medium", children: match.game }), _jsx("span", { className: cn("text-sm font-medium", match.result === 'win' ? "text-green-500" : "text-red-500"), children: match.result === 'win' ? 'WIN' : 'LOSS' })] }), _jsxs("div", { className: "flex items-center justify-between text-sm text-muted-foreground", children: [_jsxs("span", { children: ["vs ", match.opponent] }), _jsxs("span", { children: [match.score.player, " - ", match.score.opponent] })] }), _jsx("div", { className: "text-xs text-muted-foreground mt-1", children: format(match.time, 'MMM d, h:mm a') })] }, match.id))) }))] }, activeTab) })] }));
}
// Helper Components
function StatCard({ icon: Icon, label, value, color }) {
    return (_jsxs("div", { className: "bg-card rounded-xl p-4 border", children: [_jsx(Icon, { className: color, size: 24 }), _jsxs("div", { className: "mt-2", children: [_jsx("div", { className: "text-2xl font-bold", children: value }), _jsx("div", { className: "text-xs text-muted-foreground", children: label })] })] }));
}
function ActionButton({ icon: Icon, label, sublabel, onClick, }) {
    return (_jsxs("button", { onClick: onClick, className: "w-full bg-card rounded-xl p-4 border flex items-center gap-3 active:scale-[0.98] transition-transform", children: [_jsx("div", { className: "p-2 bg-primary/10 rounded-lg", children: _jsx(Icon, { className: "text-primary", size: 20 }) }), _jsxs("div", { className: "flex-1 text-left", children: [_jsx("div", { className: "font-medium", children: label }), sublabel && (_jsx("div", { className: "text-sm text-muted-foreground", children: sublabel }))] }), _jsx(ChevronRight, { className: "text-muted-foreground", size: 20 })] }));
}
