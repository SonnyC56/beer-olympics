import { RoomManager, TournamentRoomManager } from './websocket-rooms';
import { EnhancedRealtimeService, RealtimeChannel, PresenceChannel, ConnectionMetrics, BaseRealtimeService } from './realtime-enhanced';
export declare class ScalableWebSocketService extends BaseRealtimeService implements EnhancedRealtimeService {
    private connectionPool;
    private messageQueue;
    private deduplicator;
    private roomManager;
    private tournamentRoomManager;
    private channels;
    private presenceData;
    private endpoints;
    private reconnectTimer?;
    private queueProcessor?;
    constructor();
    connect(): Promise<void>;
    disconnect(): void;
    reconnect(): Promise<void>;
    subscribe(channelName: string): RealtimeChannel | null;
    subscribePresence(channelName: string): PresenceChannel | null;
    unsubscribe(channelName: string): void;
    isConnected(): boolean;
    getRoomManager(): RoomManager;
    getTournamentRoomManager(): TournamentRoomManager;
    private waitForConnection;
    private subscribeToChannel;
    private unsubscribeFromChannel;
    private sendToChannel;
    private setupEventHandlers;
    private setupPoolHandlers;
    private handlePoolMessage;
    private handleRoomEvent;
    private updatePresenceData;
    private startQueueProcessing;
    private flushMessageQueue;
    private scheduleReconnect;
    private getChannelAuth;
    private getMessagePriority;
    private shouldPersistMessage;
    getConnectionPoolMetrics(): ConnectionMetrics | null;
    getQueueStats(): any;
    getRoomStats(roomId?: string): any;
    destroy(): void;
}
export declare const scalableRealtimeService: ScalableWebSocketService;
